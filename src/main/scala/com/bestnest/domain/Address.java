package com.bestnest.domain;

// Generated Dec 6, 2014 5:03:01 PM by Hibernate Tools 3.6.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "address", catalog = "ozuygqof_bestnest")
public class Address implements java.io.Serializable {

	private Integer addressId;
	private CityLocality cityLocality;
	private String street;
	private String pin;
	private Set<Project> projects = new HashSet<Project>(0);
	private Set<UserProfile> userProfiles = new HashSet<UserProfile>(0);

	public Address() {
	}

	public Address(CityLocality cityLocality, String street, String pin,
			Set<Project> projects, Set<UserProfile> userProfiles) {
		this.cityLocality = cityLocality;
		this.street = street;
		this.pin = pin;
		this.projects = projects;
		this.userProfiles = userProfiles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "address_id", unique = true, nullable = false)
	public Integer getAddressId() {
		return this.addressId;
	}

	public void setAddressId(Integer addressId) {
		this.addressId = addressId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "city_locality_id")
	public CityLocality getCityLocality() {
		return this.cityLocality;
	}

	public void setCityLocality(CityLocality cityLocality) {
		this.cityLocality = cityLocality;
	}

	@Column(name = "street", length = 200)
	public String getStreet() {
		return this.street;
	}

	public void setStreet(String street) {
		this.street = street;
	}

	@Column(name = "pin", length = 45)
	public String getPin() {
		return this.pin;
	}

	public void setPin(String pin) {
		this.pin = pin;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "address")
	public Set<Project> getProjects() {
		return this.projects;
	}

	public void setProjects(Set<Project> projects) {
		this.projects = projects;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "address")
	public Set<UserProfile> getUserProfiles() {
		return this.userProfiles;
	}

	public void setUserProfiles(Set<UserProfile> userProfiles) {
		this.userProfiles = userProfiles;
	}

}
