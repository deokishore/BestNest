package com.bestnest.domain;

// Generated Feb 22, 2015 7:58:35 AM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ProjectDetails generated by hbm2java
 */
@Entity
@Table(name = "project_details", catalog = "ozuygqof_bestnest")
public class ProjectDetails implements java.io.Serializable {

	private Integer projectDetailsId;
	private Purpose purpose;
	private Project project;
	private ProjectImage projectImage;
	private String projectDetailsName;
	private Integer bedRooms;
	private Integer bathRooms;
	private String furnished;
	private String possessionStatus;
	private Integer floorNumber;
	private Integer totalFloors;
	private String additionalRooms;
	private String facing;
	private String overLooking;
	private Integer ageOfConstruction;
	private String transactionType;
	private String typeOfOwnership;
	private Integer size;
	private Integer price;
	private String homeLoanOffered;
	private String bestDeal;
	private String overview;
	private String amenities;
	private String possessionDate;
	private Set<ProjectPrice> projectPrices = new HashSet<ProjectPrice>(0);

	public ProjectDetails() {
	}

	public ProjectDetails(Purpose purpose, Project project,
			ProjectImage projectImage, String projectDetailsName,
			Integer bedRooms, Integer bathRooms, String furnished,
			String possessionStatus, Integer floorNumber, Integer totalFloors,
			String additionalRooms, String facing, String overLooking,
			Integer ageOfConstruction, String transactionType,
			String typeOfOwnership, Integer size, Integer price,
			String homeLoanOffered, String bestDeal, String overview,
			String amenities, String possessionDate,
			Set<ProjectPrice> projectPrices) {
		this.purpose = purpose;
		this.project = project;
		this.projectImage = projectImage;
		this.projectDetailsName = projectDetailsName;
		this.bedRooms = bedRooms;
		this.bathRooms = bathRooms;
		this.furnished = furnished;
		this.possessionStatus = possessionStatus;
		this.floorNumber = floorNumber;
		this.totalFloors = totalFloors;
		this.additionalRooms = additionalRooms;
		this.facing = facing;
		this.overLooking = overLooking;
		this.ageOfConstruction = ageOfConstruction;
		this.transactionType = transactionType;
		this.typeOfOwnership = typeOfOwnership;
		this.size = size;
		this.price = price;
		this.homeLoanOffered = homeLoanOffered;
		this.bestDeal = bestDeal;
		this.overview = overview;
		this.amenities = amenities;
		this.possessionDate = possessionDate;
		this.projectPrices = projectPrices;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "project_details_id", unique = true, nullable = false)
	public Integer getProjectDetailsId() {
		return this.projectDetailsId;
	}

	public void setProjectDetailsId(Integer projectDetailsId) {
		this.projectDetailsId = projectDetailsId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "purpose_Id")
	public Purpose getPurpose() {
		return this.purpose;
	}

	public void setPurpose(Purpose purpose) {
		this.purpose = purpose;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "project_id")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "project_image_id")
	public ProjectImage getProjectImage() {
		return this.projectImage;
	}

	public void setProjectImage(ProjectImage projectImage) {
		this.projectImage = projectImage;
	}

	@Column(name = "project_details_name", length = 100)
	public String getProjectDetailsName() {
		return this.projectDetailsName;
	}

	public void setProjectDetailsName(String projectDetailsName) {
		this.projectDetailsName = projectDetailsName;
	}

	@Column(name = "bed_rooms")
	public Integer getBedRooms() {
		return this.bedRooms;
	}

	public void setBedRooms(Integer bedRooms) {
		this.bedRooms = bedRooms;
	}

	@Column(name = "bath_rooms")
	public Integer getBathRooms() {
		return this.bathRooms;
	}

	public void setBathRooms(Integer bathRooms) {
		this.bathRooms = bathRooms;
	}

	@Column(name = "furnished", length = 45)
	public String getFurnished() {
		return this.furnished;
	}

	public void setFurnished(String furnished) {
		this.furnished = furnished;
	}

	@Column(name = "possession_status", length = 45)
	public String getPossessionStatus() {
		return this.possessionStatus;
	}

	public void setPossessionStatus(String possessionStatus) {
		this.possessionStatus = possessionStatus;
	}

	@Column(name = "floor_number")
	public Integer getFloorNumber() {
		return this.floorNumber;
	}

	public void setFloorNumber(Integer floorNumber) {
		this.floorNumber = floorNumber;
	}

	@Column(name = "total_floors")
	public Integer getTotalFloors() {
		return this.totalFloors;
	}

	public void setTotalFloors(Integer totalFloors) {
		this.totalFloors = totalFloors;
	}

	@Column(name = "additional_rooms", length = 45)
	public String getAdditionalRooms() {
		return this.additionalRooms;
	}

	public void setAdditionalRooms(String additionalRooms) {
		this.additionalRooms = additionalRooms;
	}

	@Column(name = "facing", length = 45)
	public String getFacing() {
		return this.facing;
	}

	public void setFacing(String facing) {
		this.facing = facing;
	}

	@Column(name = "over_looking", length = 45)
	public String getOverLooking() {
		return this.overLooking;
	}

	public void setOverLooking(String overLooking) {
		this.overLooking = overLooking;
	}

	@Column(name = "age_of_construction")
	public Integer getAgeOfConstruction() {
		return this.ageOfConstruction;
	}

	public void setAgeOfConstruction(Integer ageOfConstruction) {
		this.ageOfConstruction = ageOfConstruction;
	}

	@Column(name = "transaction_type", length = 45)
	public String getTransactionType() {
		return this.transactionType;
	}

	public void setTransactionType(String transactionType) {
		this.transactionType = transactionType;
	}

	@Column(name = "type_of_ownership", length = 45)
	public String getTypeOfOwnership() {
		return this.typeOfOwnership;
	}

	public void setTypeOfOwnership(String typeOfOwnership) {
		this.typeOfOwnership = typeOfOwnership;
	}

	@Column(name = "size")
	public Integer getSize() {
		return this.size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	@Column(name = "price")
	public Integer getPrice() {
		return this.price;
	}

	public void setPrice(Integer price) {
		this.price = price;
	}

	@Column(name = "home_loan_offered", length = 200)
	public String getHomeLoanOffered() {
		return this.homeLoanOffered;
	}

	public void setHomeLoanOffered(String homeLoanOffered) {
		this.homeLoanOffered = homeLoanOffered;
	}

	@Column(name = "best_deal", length = 1)
	public String getBestDeal() {
		return this.bestDeal;
	}

	public void setBestDeal(String bestDeal) {
		this.bestDeal = bestDeal;
	}

	@Column(name = "overview", length = 5000)
	public String getOverview() {
		return this.overview;
	}

	public void setOverview(String overview) {
		this.overview = overview;
	}

	@Column(name = "amenities", length = 2000)
	public String getAmenities() {
		return this.amenities;
	}

	public void setAmenities(String amenities) {
		this.amenities = amenities;
	}

	@Column(name = "possession_date", length = 45)
	public String getPossessionDate() {
		return this.possessionDate;
	}

	public void setPossessionDate(String possessionDate) {
		this.possessionDate = possessionDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "projectDetails")
	public Set<ProjectPrice> getProjectPrices() {
		return this.projectPrices;
	}

	public void setProjectPrices(Set<ProjectPrice> projectPrices) {
		this.projectPrices = projectPrices;
	}

}
