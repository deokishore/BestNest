package com.bestnest.domain;

// Generated Mar 21, 2015 7:06:25 PM by Hibernate Tools 3.6.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "project", catalog = "ozuygqof_bestnest")
public class Project implements java.io.Serializable {

	private Integer projectId;
	private UserProfile userProfileByUserProfileId;
	private PropertyType propertyType;
	private LocalityInfo localityInfo;
	private Company company;
	private Address address;
	private UserProfile userProfileByProjectContactId;
	private String projectName;
	private String possessionDate;
	private Boolean focusProject;
	private String possessionStatus;
	private String projectLogo;
	private String projectGroup;
	private String title;
	private String metaKeyword;
	private String metaDescription;
	

	private Set<ProjectSimilar> projectSimilarsForProjectId = new HashSet<ProjectSimilar>(
			0);
	private Set<ProjectDetails> projectDetailses = new HashSet<ProjectDetails>(
			0);
	private Set<ProjectSimilar> projectSimilarsForProjectSimilarMappingId = new HashSet<ProjectSimilar>(
			0);

	public Project() {
	}

	public Project(UserProfile userProfileByUserProfileId,
			PropertyType propertyType, LocalityInfo localityInfo,
			Company company, Address address,
			UserProfile userProfileByProjectContactId, String projectName,
			String possessionDate, Boolean focusProject,
			String possessionStatus,
			String projectLogo,
			String title,
			String metaKeyword,
			String metaDescription,
			Set<ProjectSimilar> projectSimilarsForProjectId,
			Set<ProjectDetails> projectDetailses,
			Set<ProjectSimilar> projectSimilarsForProjectSimilarMappingId) {
		this.userProfileByUserProfileId = userProfileByUserProfileId;
		this.propertyType = propertyType;
		this.localityInfo = localityInfo;
		this.company = company;
		this.address = address;
		this.userProfileByProjectContactId = userProfileByProjectContactId;
		this.projectName = projectName;
		this.possessionDate = possessionDate;
		this.projectLogo = projectLogo;
		this.focusProject = focusProject;
		this.possessionStatus = possessionStatus;
		this.title = title;
		this.metaKeyword = metaKeyword;
		this.metaDescription = metaDescription;
		this.projectSimilarsForProjectId = projectSimilarsForProjectId;
		this.projectDetailses = projectDetailses;
		this.projectSimilarsForProjectSimilarMappingId = projectSimilarsForProjectSimilarMappingId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "project_id", unique = true, nullable = false)
	public Integer getProjectId() {
		return this.projectId;
	}

	public void setProjectId(Integer projectId) {
		this.projectId = projectId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_profile_id")
	public UserProfile getUserProfileByUserProfileId() {
		return this.userProfileByUserProfileId;
	}

	public void setUserProfileByUserProfileId(
			UserProfile userProfileByUserProfileId) {
		this.userProfileByUserProfileId = userProfileByUserProfileId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "property_type_id")
	public PropertyType getPropertyType() {
		return this.propertyType;
	}

	public void setPropertyType(PropertyType propertyType) {
		this.propertyType = propertyType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "locality_info_id")
	public LocalityInfo getLocalityInfo() {
		return this.localityInfo;
	}

	public void setLocalityInfo(LocalityInfo localityInfo) {
		this.localityInfo = localityInfo;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "company_Id")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "address_id")
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_contact_id")
	public UserProfile getUserProfileByProjectContactId() {
		return this.userProfileByProjectContactId;
	}

	public void setUserProfileByProjectContactId(
			UserProfile userProfileByProjectContactId) {
		this.userProfileByProjectContactId = userProfileByProjectContactId;
	}

	@Column(name = "project_name", length = 200)
	public String getProjectName() {
		return this.projectName;
	}

	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

	@Column(name = "possession_date", length = 45)
	public String getPossessionDate() {
		return this.possessionDate;
	}

	public void setPossessionDate(String possessionDate) {
		this.possessionDate = possessionDate;
	}
	
	@Column(name = "focus_project")
	public Boolean getFocusProject() {
		return this.focusProject;
	}

	public void setFocusProject(Boolean focusProject) {
		this.focusProject = focusProject;
	}

	@Column(name = "possession_status", length = 45)
	public String getPossessionStatus() {
		return this.possessionStatus;
	}

	public void setPossessionStatus(String possessionStatus) {
		this.possessionStatus = possessionStatus;
	}

	@Column(name = "project_logo", length = 150)
	public String getProjectLogo() {
		return projectLogo;
	}

	public void setProjectLogo(String projectLogo) {
		this.projectLogo = projectLogo;
	}
	
	@Column(name = "project_group", length = 100)
	public String getProjectGroup() {
		return projectGroup;
	}

	public void setProjectGroup(String projectGroup) {
		this.projectGroup = projectGroup;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "projectByProjectId")
	public Set<ProjectSimilar> getProjectSimilarsForProjectId() {
		return this.projectSimilarsForProjectId;
	}

	public void setProjectSimilarsForProjectId(
			Set<ProjectSimilar> projectSimilarsForProjectId) {
		this.projectSimilarsForProjectId = projectSimilarsForProjectId;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "project")
	@OrderBy("bedRooms ASC") 
	public Set<ProjectDetails> getProjectDetailses() {
		return this.projectDetailses;
	}

	public void setProjectDetailses(Set<ProjectDetails> projectDetailses) {
		this.projectDetailses = projectDetailses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "projectByProjectSimilarMappingId")
	public Set<ProjectSimilar> getProjectSimilarsForProjectSimilarMappingId() {
		return this.projectSimilarsForProjectSimilarMappingId;
	}

	public void setProjectSimilarsForProjectSimilarMappingId(
			Set<ProjectSimilar> projectSimilarsForProjectSimilarMappingId) {
		this.projectSimilarsForProjectSimilarMappingId = projectSimilarsForProjectSimilarMappingId;
	}

	@Column(name = "title", length = 70)
	public String getTitle() {
		return title;
	}


	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "meta_keyword", length = 100)
	public String getMetaKeyword() {
		return metaKeyword;
	}

	public void setMetaKeyword(String metaKeyword) {
		this.metaKeyword = metaKeyword;
	}


	@Column(name = "meta_description", length = 170)
	public String getMetaDescription() {
		return metaDescription;
	}

	public void setMetaDescription(String metaDescription) {
		this.metaDescription = metaDescription;
	}

	@Override
	public int hashCode() {
		// TODO Auto-generated method stub
		return 1;
	}

}
